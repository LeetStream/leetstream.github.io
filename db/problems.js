import { Difficulty } from "./difficulty.js";
import { patterns } from "./patterns.js";
import { sites } from "./sites.js";
import { UserDb } from "./userDb.js";

export function getProblemOfDay() {
  const currentDate = new Date();
  currentDate.toLocaleString("en-US", { timeZone: "Africa/Cairo" });
  return (
    Math.floor(
      (currentDate.getTime() -
        new Date(`${UserDb.get().stream.startDate}T00:00:00`).getTime()) /
        (1000 * 3600 * 24)
    ) % problems.length
  );
}

export const problems = [
  {
    id: "L69",
    title: "Sqrt(x)",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Warmup],
    url: "https://leetcode.com/problems/sqrtx",
    solutions: [
      {
        title: "Solution: Sqrt",
        site: sites.DesignGurus,
        url: "https://www.designgurus.io/course-play/grokking-the-coding-interview/doc/63d9065f4c5ef6536969a6ab",
      },
      {
        title: "Sqrt(x) - Leetcode 69 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=zdMhGxRWutQ",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Qualtrics",
      "Uber",
      "Wayfair",
    ],
    tags: ["Math", "Binary Search"],
  },
  {
    id: "N924",
    title: "Shortest Word Distance",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Warmup],
    url: "https://www.lintcode.com/problem/924",
    solutions: [
      {
        title: "Solution: Shortest Word Distance",
        site: {},
        url: "https://aaronice.gitbook.io/lintcode/hash-table/shortest-word-distance",
      },
      {
        title: "Shortest Word Distance - LeetCodeCa",
        site: {},
        url: "https://leetcode.ca/all/243.html",
      },
      {
        title: "Shortest Word Distance - AlgoMonster",
        site: {},
        url: "https://algo.monster/liteproblems/243",
      },
    ],
    companies: [
      "Amazon",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Uber",
    ],
    tags: ["Array", "String"],
  },
  {
    id: "L345",
    title: "Reverse Vowels of a String",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Warmup, patterns.TwoPointers],
    url: "https://leetcode.com/problems/reverse-vowels-of-a-string",
    solutions: [
      {
        title: "Reverse Vowels of a String | AlgoMonster",
        site: {},
        url: "https://algo.monster/liteproblems/345",
      },
    ],
    companies: ["Amazon", "Apple", "Google"],
    tags: ["Two Pointers", "String"],
  },
  {
    id: "L1635",
    title: "Number of Good Pairs",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Warmup],
    url: "https://leetcode.com/problems/number-of-good-pairs",
    solutions: [],
    companies: ["Uber"],
    tags: ["Array", "Hash Table", "Math", "Counting"],
  },
  {
    id: "L1960",
    title: "Check if the Sentence Is Pangram",
    difficulty: Difficulty.EASY,
    patterns: [
      patterns.Warmup,
      patterns.BitwiseManipulation,
      patterns.HashMaps,
    ],
    url: "https://leetcode.com/problems/check-if-the-sentence-is-pangram",
    solutions: [
      {
        title: "Solution: Pangram - Bitwise Manipulation",
        site: {},
        url: "https://algo.monster/liteproblems/1832",
      },
      {
        title: "Solution: Pangram - HashSet",
        site: sites.DesignGurus,
        url: "https://www.designgurus.io/course-play/grokking-the-coding-interview/doc/63d9b9024bb2155485a1a03a",
      },
    ],
    companies: [],
    tags: ["Hash Table", "String", "Bit Manipulation", "Bitmask"],
  },
  {
    id: "L20",
    title: "Valid Parentheses",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/valid-parentheses",
    solutions: [
      {
        title: "Valid Parentheses - Stack - Leetcode 20 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=WTzjTskDFMg",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Akuna Capital",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Audible",
      "Baidu",
      "Barclays",
      "Blizzard",
      "Bloomberg",
      "Cisco",
      "Citadel",
      "DoorDash",
      "eBay",
      "Epic Systems",
      "Expedia",
      "Facebook",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "IBM",
      "Intel",
      "Intuit",
      "caMorgan",
      "LinkedIn",
      "Lyft",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Postmates",
      "Riot Games",
      "Salesforce",
      "Samsung",
      "SAP",
      "ServiceNow",
      "Spotify",
      "Tencent",
      "TripleByte",
      "Twilio",
      "Twitter",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yandex",
      "Zenefits",
      "Zillow",
    ],
    tags: ["String", "Stack", "Blind75", "Grind75"],
  },
  {
    id: "L232",
    title: "Implement Queue using Stacks",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/implement-queue-using-stacks",
    solutions: [
      {
        title: "Implement Queue using Stacks - Leetcode 232 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=eanwa3ht3YQ",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "eBay",
      "Google",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Uber",
      "Yahoo",
      "Yandex",
    ],
    tags: ["Stack", "Design", "Queue", "Grind75"],
  },
  {
    id: "L121",
    title: "Best Time to Buy and Sell Stock",
    difficulty: Difficulty.EASY,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    solutions: [
      {
        title:
          "Sliding Window: Best Time to Buy and Sell Stock - Leetcode 121 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=1pkOgXD63yU",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "BlackRock",
      "Bloomberg",
      "Cisco",
      "Citadel",
      "Citrix",
      "Deutsche Bank",
      "DoorDash",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Grab",
      "Intel",
      "caMorgan",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Morgan Stanley",
      "Oracle",
      "Redfin",
      "SAP",
      "Snapchat",
      "Tableau",
      "Tencent",
      "Uber",
      "Visa",
      "Walmart Labs",
      "Yahoo",
      "Zillow",
    ],
    tags: ["Array", "Dynamic Programming", "Blind75", "Grind75"],
  },
  {
    id: "L1128",
    title: "Remove All Adjacent Duplicates In String",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
    solutions: [],
    companies: ["Amazon"],
    tags: ["String", "Stack"],
  },
  {
    id: "L3",
    title: "Longest Substring Without Repeating Characters",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    solutions: [
      {
        title:
          "Longest Substring Without Repeating Characters - Leetcode 3 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=wiGpQwVHdE0",
      },
    ],
    companies: [
      "Adobe",
      "Alation",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "eBay",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Huawei",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Salesforce",
      "Samsung",
      "SAP",
      "Snapchat",
      "Tencent",
      "Twitch",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zillow",
      "Zoho",
    ],
    tags: ["Hash Table", "String", "Sliding Window", "Blind75", "Grind75"],
  },
  {
    id: "L209",
    title: "Minimum Size Subarray Sum",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/minimum-size-subarray-sum",
    solutions: [
      {
        title: "Minimum Size Subarray Sum - Leetcode 209 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=aYqYMIqZx5s",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Microsoft",
      "Oracle",
      "SAP",
    ],
    tags: ["Array", "Binary Search", "Sliding Window", "Prefix Sum"],
  },
  {
    id: "L206",
    title: "Reverse Linked List",
    difficulty: Difficulty.EASY,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/reverse-linked-list",
    solutions: [
      {
        title:
          "Reverse Linked List - Iterative AND Recursive - Leetcode 206 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=G0_I-ZF0S38",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "eBay",
      "Facebook",
      "FactSet",
      "Goldman Sachs",
      "Google",
      "Intel",
      "Mathworks",
      "Microsoft",
      "Nvidia",
      "Oracle",
      "Paypal",
      "Qualcomm",
      "Snapchat",
      "TripAdvisor",
      "Twitter",
      "Two Sigma",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zenefits",
    ],
    tags: ["Linked List", "Recursion", "Blind75", "Grind75"],
  },
  {
    id: "L341",
    title: "Flatten Nested List Iterator",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/flatten-nested-list-iterator",
    solutions: [
      {
        title: "Flatten Nested List Iterator - Leetcode 341 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=4ILiBgLokM8",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Snapchat",
      "Splunk",
      "Twitter",
      "Uber",
      "VMware",
    ],
    tags: [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Design",
      "Queue",
      "Iterator",
    ],
  },
  {
    id: "L528",
    title: "Swapping Nodes in a Linked List",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/swapping-nodes-in-a-linked-list",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "DoorDash",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Rubrik",
      "TripAdvisor",
      "Twitter",
      "Two Sigma",
      "Uber",
      "Wish",
      "Yelp",
    ],
    tags: ["Linked List", "Two Pointers"],
  },
  {
    id: "L187",
    title: "Repeated DNA Sequences",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/repeated-dna-sequences",
    solutions: [
      {
        title: "Repeated DNA Sequences - Leetcode 187 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=FzTYfsmtOso",
      },
    ],
    companies: ["Amazon", "Google", "LinkedIn"],
    tags: [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function",
    ],
  },
  {
    id: "L24",
    title: "Swap Nodes in Pairs",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/swap-nodes-in-pairs",
    solutions: [
      {
        title: "Swap Nodes in Pairs - Apple Interview Question - Leetcode 24",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=o811TZLAWOo",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "eBay",
      "Facebook",
      "Google",
      "Lyft",
      "Microsoft",
      "Oracle",
      "SAP",
      "Uber",
    ],
    tags: ["Linked List", "Recursion", "Grind75"],
  },
  {
    id: "L88",
    title: "Merge Sorted Array",
    difficulty: Difficulty.EASY,
    patterns: [patterns.K_wayMerge],
    url: "https://leetcode.com/problems/merge-sorted-array",
    solutions: [
      {
        title: "Merge Sorted Array - Leetcode 88 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=P1Ic85RarKY",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "IBM",
      "Indeed",
      "Intel",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Quip (Salesforce)",
      "Tableau",
      "Uber",
      "VMware",
      "Yahoo",
      "Yandex",
    ],
    tags: ["Array", "Two Pointers", "Sorting"],
  },
  {
    id: "L378",
    title: "Kth Smallest Element in a Sorted Matrix",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.K_wayMerge],
    url: "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "Microsoft",
      "Twitter",
      "Uber",
      "Walmart Labs",
    ],
    tags: [
      "Array",
      "Binary Search",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix",
    ],
  },
  {
    id: "L92",
    title: "Reverse Linked List II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/reverse-linked-list-ii",
    solutions: [
      {
        title: "Reverse Linked List II - Leetcode 92 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=RF_M9tX4Eag",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Docusign",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
    ],
    tags: ["Linked List"],
  },
  {
    id: "L636",
    title: "Exclusive Time of Functions",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/exclusive-time-of-functions",
    solutions: [],
    companies: [
      "Amazon",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Uber",
    ],
    tags: ["Array", "Stack"],
  },
  {
    id: "L424",
    title: "Longest Repeating Character Replacement",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/longest-repeating-character-replacement",
    solutions: [
      {
        title:
          "Longest Repeating Character Replacement - Leetcode 424 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=gqXU1UyA8pk",
      },
    ],
    companies: ["Google", "Pocket Gems"],
    tags: ["Hash Table", "String", "Sliding Window", "Blind75", "Grind75"],
  },
  {
    id: "L141",
    title: "Linked List Cycle",
    difficulty: Difficulty.EASY,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/linked-list-cycle",
    solutions: [
      {
        title:
          "Linked List Cycle - Floyd's Tortoise and Hare - Leetcode 141 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=gBTe7lFR3vc",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Samsung",
      "Tencent",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yandex",
    ],
    tags: ["Hash Table", "Linked List", "Two Pointers", "Blind75", "Grind75"],
  },
  {
    id: "L373",
    title: "Find K Pairs with Smallest Sums",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.K_wayMerge],
    url: "https://leetcode.com/problems/find-k-pairs-with-smallest-sums",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Uber",
    ],
    tags: ["Array", "Heap (Priority Queue)"],
  },
  {
    id: "L202",
    title: "Happy Number",
    difficulty: Difficulty.EASY,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/happy-number",
    solutions: [
      {
        title: "Happy Number - Leetcode 202 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=ljz85bxOYJ0",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Evernote",
      "Facebook",
      "Google",
      "caMorgan",
      "Microsoft",
      "Nutanix",
      "Pinterest",
      "Twitter",
      "Uber",
    ],
    tags: ["Hash Table", "Math", "Two Pointers"],
  },
  {
    id: "L143",
    title: "Reorder List",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/reorder-list",
    solutions: [
      {
        title:
          "Linkedin Interview Question - Reorder List - Leetcode 143 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=S5bfdUTrKLM",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "ByteDance",
      "Cisco",
      "Facebook",
      "Google",
      "Microsoft",
      "Splunk",
      "Tencent",
    ],
    tags: [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L1249",
    title: "Minimum Remove to Make Valid Parentheses",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",
    solutions: [
      {
        title:
          "Minimum Remove to Make Valid Parentheses - Leetcode 1249 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=mgQ4O9iUEbg",
      },
    ],
    companies: ["Microsoft"],
    tags: ["String", "Stack"],
  },
  {
    id: "G2",
    title: "Minimum Window Subsequence",
    difficulty: Difficulty.HARD,
    patterns: [patterns.SlidingWindow],
    url: "https://www.geeksforgeeks.org/problems/minimum-window-subsequence",
    solutions: [
      {
        title: "Solution: Minimum Window Subsequence",
        site: {},
        url: "https://algo.monster/liteproblems/727",
      },
    ],
    companies: ["Amazon", "Bloomberg", "eBay", "Google", "Houzz", "Microsoft"],
    tags: ["String", "Sliding Window", "Dynamic Programming"],
  },
  {
    id: "L234",
    title: "Palindrome Linked List",
    difficulty: Difficulty.EASY,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/palindrome-linked-list",
    solutions: [
      {
        title: "Palindrome Linked List - Leetcode 234 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=yOzXms1J6Nk",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Grab",
      "Intel",
      "IXL",
      "Microsoft",
      "Snapchat",
      "Twitter",
      "VMware",
    ],
    tags: ["Linked List", "Two Pointers", "Stack", "Recursion", "Grind75"],
  },
  {
    id: "L908",
    title: "Middle of the Linked List",
    difficulty: Difficulty.EASY,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/middle-of-the-linked-list",
    solutions: [],
    companies: ["Adobe"],
    tags: ["Linked List", "Two Pointers", "Grind75"],
  },
  {
    id: "L23",
    title: "Merge k Sorted Lists",
    difficulty: Difficulty.HARD,
    patterns: [patterns.K_wayMerge],
    url: "https://leetcode.com/problems/merge-k-sorted-lists",
    solutions: [
      {
        title: "Merge K Sorted Lists - Leetcode 23 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=q5a5OiGbT6Q",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Audible",
      "Bloomberg",
      "Box",
      "ByteDance",
      "Cisco",
      "Cohesity",
      "Cruise Automation",
      "Dropbox",
      "eBay",
      "Facebook",
      "Google",
      "Indeed",
      "IXL",
      "LinkedIn",
      "Lyft",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Salesforce",
      "SAP",
      "Tableau",
      "Tencent",
      "Twitter",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Wish",
      "Yahoo",
      "Yandex",
      "Zillow",
    ],
    tags: [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L101",
    title: "Symmetric Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/symmetric-tree",
    solutions: [
      {
        title: "Symmetric Tree - Leetcode 101 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Mao9uzxwvmc",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Salesforce",
      "SAP",
      "TripAdvisor",
      "Twitter",
      "Uber",
      "Visa",
      "Yahoo",
      "Yandex",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
      "Grind75",
    ],
  },
  {
    id: "L2196",
    title: "Reverse Nodes in Even Length Groups",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/reverse-nodes-in-even-length-groups",
    solutions: [],
    companies: [],
    tags: ["Linked List"],
  },
  {
    id: "L224",
    title: "Basic Calculator",
    difficulty: Difficulty.HARD,
    patterns: [patterns.Stacks],
    url: "https://leetcode.com/problems/basic-calculator",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Bloomberg",
      "Cruise Automation",
      "Facebook",
      "Google",
      "Indeed",
      "Intuit",
      "Jump Trading",
      "Karat",
      "Microsoft",
      "Paypal",
      "Pinterest",
      "Robinhood",
      "Roblox",
      "Snapchat",
      "Uber",
    ],
    tags: ["Math", "String", "Stack", "Recursion", "Grind75"],
  },
  {
    id: "L102",
    title: "Binary Tree Level Order Traversal",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/binary-tree-level-order-traversal",
    solutions: [
      {
        title: "Binary Tree Level Order Traversal - BFS - Leetcode 102",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=6ZnyEApgFYg",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "Citadel",
      "eBay",
      "Expedia",
      "Facebook",
      "Google",
      "LinkedIn",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Paypal",
      "SAP",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Tree", "Breadth-First Search", "Binary Tree", "Blind75", "Grind75"],
  },
  {
    id: "L76",
    title: "Minimum Window Substring",
    difficulty: Difficulty.HARD,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/minimum-window-substring",
    solutions: [
      {
        title:
          "Minimum Window Substring - Airbnb Interview Question - Leetcode 76",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=jSto0O4AJbM",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cohesity",
      "Deutsche Bank",
      "Facebook",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Snapchat",
      "Twitter",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Hash Table", "String", "Sliding Window", "Blind75", "Grind75"],
  },
  {
    id: "L287",
    title: "Find the Duplicate Number",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/find-the-duplicate-number",
    solutions: [
      {
        title: "If Programming Was An Anime | Part I",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=pKO9UjSeLew",
      },
      {
        title: "Programming Anime: Floyd's Algorithm Explained | Part II",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=9YTjXqqJEFE",
      },
      {
        title:
          "Find the Duplicate Number - Floyd's Cycle Detection - Leetcode 287 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=wjYnzkAhcNk",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "eBay",
      "Facebook",
      "Google",
      "Microsoft",
      "Morgan Stanley",
      "Oracle",
      "Salesforce",
      "Tencent",
      "Yahoo",
    ],
    tags: [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Bit Manipulation",
      "Grind75",
    ],
  },
  {
    id: "L4",
    title: "Median of Two Sorted Arrays",
    difficulty: Difficulty.HARD,
    patterns: [patterns.K_wayMerge],
    url: "https://leetcode.com/problems/median-of-two-sorted-arrays",
    solutions: [
      {
        title: "Median of Two Sorted Arrays - Binary Search - Leetcode 4",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=q6IEA26hvXc",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "DiDi",
      "Dropbox",
      "eBay",
      "Facebook",
      "Garena",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Houzz",
      "Hulu",
      "Microsoft",
      "Oracle",
      "Rubrik",
      "Tencent",
      "Two Sigma",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Zenefits",
      "Zillow",
      "Zulily",
    ],
    tags: ["Array", "Binary Search", "Divide and Conquer", "Grind75"],
  },
  {
    id: "L103",
    title: "Binary Tree Zigzag Level Order Traversal",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    solutions: [
      {
        title:
          "Binary Tree Zigzag Level Order Traversal - Leetcode 103 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=igbboQbiwqw",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "ByteDance",
      "eBay",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Morgan Stanley",
      "Oracle",
      "Qualtrics",
      "ServiceNow",
      "Tencent",
      "Uber",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Tree", "Breadth-First Search", "Binary Tree", "Grind75"],
  },
  {
    id: "L25",
    title: "Reverse Nodes in k-Group",
    difficulty: Difficulty.HARD,
    patterns: [patterns.In_placeReversalOfALinkedList],
    url: "https://leetcode.com/problems/reverse-nodes-in-k-group",
    solutions: [
      {
        title: "Reverse Nodes in K-Group - Linked List - Leetcode 25",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=1UOPsfP85V4",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "ByteDance",
      "Cisco",
      "Cohesity",
      "eBay",
      "Expedia",
      "Facebook",
      "Goo",
      "Google",
      "Mathworks",
      "Microsoft",
      "Paypal",
      "VMware",
    ],
    tags: ["Linked List", "Recursion", "Grind75"],
  },
  {
    id: "L242",
    title: "Valid Anagram",
    difficulty: Difficulty.EASY,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/valid-anagram",
    solutions: [
      {
        title: "Valid Anagram - Leetcode 242 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=9UtInBqnCgA",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "Expedia",
      "Facebook",
      "Google",
      "Microsoft",
      "Morgan Stanley",
      "Oracle",
      "Paypal",
      "ServiceNow",
      "Snapchat",
      "Uber",
      "Yahoo",
      "Yelp",
      "Zulily",
    ],
    tags: ["Hash Table", "String", "Sorting", "Blind75", "Grind75"],
  },
  {
    id: "L239",
    title: "Sliding Window Maximum",
    difficulty: Difficulty.HARD,
    patterns: [patterns.SlidingWindow],
    url: "https://leetcode.com/problems/sliding-window-maximum",
    solutions: [
      {
        title: "Sliding Window Maximum - Monotonic Queue - Leetcode 239",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=DfljaUwZsOk",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Citadel",
      "Coursera",
      "Databricks",
      "eBay",
      "Facebook",
      "Google",
      "Lyft",
      "Microsoft",
      "Nutanix",
      "Pinterest",
      "Roblox",
      "Twitter",
      "Uber",
      "Wish",
      "Yelp",
      "Zenefits",
    ],
    tags: [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue",
      "Grind75",
    ],
  },
  {
    id: "L457",
    title: "Circular Array Loop",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.FastAndSlowPointers],
    url: "https://leetcode.com/problems/circular-array-loop",
    solutions: [],
    companies: ["Goldman Sachs", "Google", "Microsoft", "Nutanix"],
    tags: ["Array", "Hash Table", "Two Pointers"],
  },
  {
    id: "L387",
    title: "First Unique Character in a String",
    difficulty: Difficulty.EASY,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/first-unique-character-in-a-string",
    solutions: [
      {
        title: "First Unique Character in a String - Leetcode 387 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=rBENYgWy3xU",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Huawei",
      "caMorgan",
      "LinkedIn",
      "Microsoft",
      "Walmart Labs",
      "Yahoo",
      "Zillow",
    ],
    tags: ["Hash Table", "String", "Queue", "Counting"],
  },
  {
    id: "L116",
    title: "Populating Next Right Pointers in Each Node",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
    solutions: [
      {
        title:
          "Populating Next Right Pointers in Each Node - Leetcode 116 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=U4hFQCa1Cq0",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "VMware",
    ],
    tags: [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
    ],
  },
  {
    id: "L266",
    title: "Palindrome Permutation",
    difficulty: Difficulty.EASY,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/palindrome-permutation",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Uber",
    ],
    tags: ["Hash Table", "String", "Bit Manipulation"],
  },
  {
    id: "L70",
    title: "Climbing Stairs",
    difficulty: Difficulty.EASY,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/climbing-stairs",
    solutions: [
      {
        title: "Climbing Stairs - Dynamic Programming - Leetcode 70 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Y0lT9Fck7qI",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Huawei",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "TripAdvisor",
      "Uber",
      "Walmart Labs",
      "Zulily",
    ],
    tags: ["Math", "Dynamic Programming", "Memoization", "Blind75", "Grind75"],
  },
  {
    id: "L383",
    title: "Ransom Note",
    difficulty: Difficulty.EASY,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/ransom-note",
    solutions: [],
    companies: ["Apple", "Hulu", "Microsoft"],
    tags: ["Hash Table", "String", "Counting", "Grind75"],
  },
  {
    id: "L338",
    title: "Counting Bits",
    difficulty: Difficulty.EASY,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/counting-bits",
    solutions: [
      {
        title: "Counting Bits - Dynamic Programming - Leetcode 338 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=RyBM56RIWrM",
      },
    ],
    companies: ["Amazon", "Apple", "Facebook", "Mathworks", "Microsoft"],
    tags: ["Dynamic Programming", "Bit Manipulation", "Blind75", "Grind75"],
  },
  {
    id: "L1236",
    title: "N-th Tribonacci Number",
    difficulty: Difficulty.EASY,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/n-th-tribonacci-number",
    solutions: [],
    companies: ["Amazon", "Dropbox", "Facebook"],
    tags: ["Math", "Dynamic Programming", "Memoization"],
  },
  {
    id: "L125",
    title: "Valid Palindrome",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/valid-palindrome",
    solutions: [
      {
        title: "Valid Palindrome - Leetcode 125 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=jJXJ16kPFWg",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Uber",
      "Wayfair",
      "Wish",
      "Yandex",
      "Zenefits",
    ],
    tags: ["Two Pointers", "String", "Blind75", "Grind75"],
  },
  {
    id: "L127",
    title: "Word Ladder",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/word-ladder",
    solutions: [
      {
        title: "Word Ladder - Breadth First Search - Leetcode 127 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=h9iTnkgv05E",
      },
    ],
    companies: [
      "Affirm",
      "Airbnb",
      "Amazon",
      "Apple",
      "Audible",
      "Bloomberg",
      "Cohesity",
      "Expedia",
      "Facebook",
      "Google",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Qualtrics",
      "Salesforce",
      "Samsung",
      "Snapchat",
      "Square",
      "Tesla",
      "Uber",
      "Walmart Labs",
      "Yelp",
      "Zillow",
    ],
    tags: ["Hash Table", "String", "Breadth-First Search", "Grind75"],
  },
  {
    id: "L680",
    title: "Valid Palindrome II",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/valid-palindrome-ii",
    solutions: [
      {
        title: "Valid Palindrome II - Leetcode 680 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=JrxRYBwG6EI",
      },
    ],
    companies: ["Atlassian", "Facebook", "Google", "Microsoft", "Yahoo"],
    tags: ["Two Pointers", "String", "Greedy"],
  },
  {
    id: "L139",
    title: "Word Break",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/word-break",
    solutions: [
      {
        title: "Word Break - Dynamic Programming - Leetcode 139 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Sx9NNgInc3A",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Audible",
      "Bloomberg",
      "Coupang",
      "Facebook",
      "Google",
      "HBO",
      "Hulu",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Pinterest",
      "Pocket Gems",
      "Qualtrics",
      "Salesforce",
      "Snapchat",
      "Square",
      "TripAdvisor",
      "Twilio",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yelp",
    ],
    tags: [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L49",
    title: "Group Anagrams",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/group-anagrams",
    solutions: [
      {
        title: "Group Anagrams - Categorize Strings by Count - Leetcode 49",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=vzdNOK2oB2E",
      },
    ],
    companies: [
      "Adobe",
      "Affirm",
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Booking.com",
      "Docusign",
      "eBay",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Hulu",
      "Intuit",
      "Mathworks",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Qualtrics",
      "Salesforce",
      "Snapchat",
      "Tesla",
      "Twilio",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Wish",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zulily",
    ],
    tags: ["Array", "Hash Table", "String", "Sorting", "Blind75", "Grind75"],
  },
  {
    id: "L151",
    title: "Reverse Words in a String",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/reverse-words-in-a-string",
    solutions: [],
    companies: [
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "Citadel",
      "Facebook",
      "Huawei",
      "Microsoft",
      "Nvidia",
      "Oracle",
      "Salesforce",
      "Snapchat",
      "Walmart Labs",
      "Yandex",
      "Yelp",
      "Zillow",
    ],
    tags: ["Two Pointers", "String"],
  },
  {
    id: "L268",
    title: "Missing Number",
    difficulty: Difficulty.EASY,
    patterns: [patterns.CyclicSort],
    url: "https://leetcode.com/problems/missing-number",
    solutions: [
      {
        title: "Missing Number - Blind 75 - Leetcode 268 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=WnPLSRLSANE",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Arista Networks",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "IBM",
      "Microsoft",
      "Oracle",
      "ServiceNow",
      "VMware",
      "Zillow",
    ],
    tags: [
      "Array",
      "Hash Table",
      "Math",
      "Binary Search",
      "Bit Manipulation",
      "Sorting",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L75",
    title: "Sort Colors",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/sort-colors",
    solutions: [
      {
        title: "Sort Colors - Quicksort Partition - Leetcode 75 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=4xbWSRZHqac",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "eBay",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Pocket Gems",
      "Pure Storage",
      "Uber",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Array", "Two Pointers", "Sorting", "Grind75"],
  },
  {
    id: "L1029",
    title: "Vertical Order Traversal of a Binary Tree",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TreeBreadthFirstSearch],
    url: "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",
    solutions: [
      {
        title: "Two City Scheduling - Leetcode 1029 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=d-B_gk_gJtQ",
      },
    ],
    companies: ["Amazon", "Bloomberg"],
    tags: [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
    ],
  },
  {
    id: "L645",
    title: "Set Mismatch",
    difficulty: Difficulty.EASY,
    patterns: [patterns.CyclicSort],
    url: "https://leetcode.com/problems/set-mismatch",
    solutions: [
      {
        title: "Set Mismatch - Leetcode 645 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=d-ulaeRBA64",
      },
    ],
    companies: ["Amazon"],
    tags: ["Array", "Hash Table", "Bit Manipulation", "Sorting"],
  },
  {
    id: "L322",
    title: "Coin Change",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/coin-change",
    solutions: [
      {
        title: "Coin Change - Dynamic Programming Bottom Up - Leetcode 322",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=H9bfqozjoqs",
      },
    ],
    companies: [
      "Adobe",
      "Affirm",
      "Airbnb",
      "Amazon",
      "Apple",
      "BlackRock",
      "Bloomberg",
      "Capital One",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "caMorgan",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Zappos",
    ],
    tags: [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L438",
    title: "Find All Anagrams in a String",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/find-all-anagrams-in-a-string",
    solutions: [
      {
        title: "Find All Anagrams in a String - Leetcode 438 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=G8xtZy0fDKg",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Microsoft",
      "Oracle",
      "Robinhood",
      "Uber",
    ],
    tags: ["Hash Table", "String", "Sliding Window", "Grind75"],
  },
  {
    id: "L1646",
    title: "Kth Missing Positive Number",
    difficulty: Difficulty.EASY,
    patterns: [patterns.CyclicSort],
    url: "https://leetcode.com/problems/kth-missing-positive-number",
    solutions: [],
    companies: [],
    tags: ["Array", "Binary Search"],
  },
  {
    id: "L41",
    title: "First Missing Positive",
    difficulty: Difficulty.HARD,
    patterns: [patterns.CyclicSort],
    url: "https://leetcode.com/problems/first-missing-positive",
    solutions: [
      {
        title: "First Missing Positive - Leetcode 41 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=8g78yfzMlao",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Databricks",
      "Facebook",
      "Google",
      "Grab",
      "Microsoft",
      "Oracle",
      "Pocket Gems",
      "Salesforce",
      "SAP",
      "Uber",
      "Walmart Labs",
      "Wayfair",
      "Wish",
    ],
    tags: ["Array", "Hash Table", "Grind75"],
  },
  {
    id: "L19",
    title: "Remove Nth Node From End of List",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
    solutions: [
      {
        title:
          "Remove Nth Node from End of List - Oracle Interview Question - Leetcode 19",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=XVuQxVej6y8",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Microsoft",
      "Oracle",
      "Yandex",
    ],
    tags: ["Linked List", "Two Pointers", "Blind75", "Grind75"],
  },
  {
    id: "L543",
    title: "Diameter of Binary Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/diameter-of-binary-tree",
    solutions: [
      {
        title: "Diameter of a Binary Tree - Leetcode 543 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=bkxqA8Rfv04",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Google",
      "Intel",
      "Microsoft",
      "Oracle",
      "Qualtrics",
      "VMware",
    ],
    tags: ["Tree", "Depth-First Search", "Binary Tree", "Grind75"],
  },
  {
    id: "L104",
    title: "Maximum Depth of Binary Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/maximum-depth-of-binary-tree",
    solutions: [
      {
        title:
          "Maximum Depth of Binary Tree - 3 Solutions - Leetcode 104 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=hTM3phVI6YQ",
      },
    ],
    companies: [
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Microsoft",
      "SAP",
      "Uber",
      "Yahoo",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L91",
    title: "Decode Ways",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/decode-ways",
    solutions: [
      {
        title: "Decode Ways - Dynamic Programming - Leetcode 91 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=6aEyTjOwlJU",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Baidu",
      "Barclays",
      "Bloomberg",
      "Databricks",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Lyft",
      "Microsoft",
      "Pinterest",
      "Snapchat",
      "Square",
      "Twitter",
      "Uber",
    ],
    tags: ["String", "Dynamic Programming", "Blind75", "Grind75"],
  },
  {
    id: "L348",
    title: "Design Tic-Tac-Toe",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/design-tic-tac-toe",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "DoorDash",
      "Facebook",
      "Google",
      "Microsoft",
      "TripleByte",
      "Uber",
    ],
    tags: ["Array", "Hash Table", "Design", "Matrix", "Simulation"],
  },
  {
    id: "L108",
    title: "Convert Sorted Array to Binary Search Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",
    solutions: [
      {
        title:
          "Convert Sorted Array to Binary Search Tree - Leetcode 108 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=0K0uCMYq5ng",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Yahoo",
    ],
    tags: [
      "Array",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree",
      "Grind75",
    ],
  },
  {
    id: "L136",
    title: "Single Number",
    difficulty: Difficulty.EASY,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/single-number",
    solutions: [
      {
        title: "Single Number - Leetcode 136 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=qMPX1AOa83k",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Palantir Technologies",
      "SAP",
      "Tencent",
    ],
    tags: ["Array", "Bit Manipulation", "Grind75"],
  },
  {
    id: "L16",
    title: "3Sum Closest",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TwoPointers],
    url: "https://leetcode.com/problems/3sum-closest",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Microsoft",
      "Uber",
      "Yandex",
    ],
    tags: ["Array", "Two Pointers", "Sorting", "Grind75"],
  },
  {
    id: "L226",
    title: "Invert Binary Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/invert-binary-tree",
    solutions: [
      {
        title: "Invert Binary Tree - Depth First Search - Leetcode 226",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=OnSn2XEQ4MY",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Salesforce",
      "Uber",
      "VMware",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L190",
    title: "Reverse Bits",
    difficulty: Difficulty.EASY,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/reverse-bits",
    solutions: [
      {
        title: "Reverse Bits - Binary - Leetcode 190 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=UcoN6UjAI64",
      },
    ],
    companies: ["Airbnb", "Amazon", "Apple", "Google", "Samsung", "Tencent"],
    tags: ["Divide and Conquer", "Bit Manipulation", "Blind75", "Grind75"],
  },
  {
    id: "L39",
    title: "Combination Sum",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/combination-sum",
    solutions: [
      {
        title: "Combination Sum - Backtracking - Leetcode 39 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=GBKI9VSKdGg",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "IXL",
      "LinkedIn",
      "Microsoft",
      "Quora",
      "Snapchat",
      "Square",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yelp",
    ],
    tags: ["Array", "Backtracking", "Grind75"],
  },
  {
    id: "L2237",
    title: "Longest Palindrome by Concatenating Two Letter Words",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/longest-palindrome-by-concatenating-two-letter-words",
    solutions: [],
    companies: [],
    tags: ["Array", "Hash Table", "String", "Greedy", "Counting"],
  },
  {
    id: "L389",
    title: "Find the Difference",
    difficulty: Difficulty.EASY,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/find-the-difference",
    solutions: [
      {
        title: "Find the Difference - Leetcode 389 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=oFmv4N4z00c",
      },
    ],
    companies: ["Adobe", "Google"],
    tags: ["Hash Table", "String", "Bit Manipulation", "Sorting"],
  },
  {
    id: "L1054",
    title: "Complement of Base 10 Integer",
    difficulty: Difficulty.EASY,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/complement-of-base-10-integer",
    solutions: [],
    companies: ["Amazon"],
    tags: ["Bit Manipulation"],
  },
  {
    id: "L733",
    title: "Flood Fill",
    difficulty: Difficulty.EASY,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/flood-fill",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Palantir Technologies",
      "Qualtrics",
      "Snapchat",
      "Uber",
    ],
    tags: [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix",
      "Grind75",
    ],
  },
  {
    id: "L236",
    title: "Lowest Common Ancestor of a Binary Tree",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
    solutions: [],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "eBay",
      "Facebook",
      "Google",
      "Intuit",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Pinterest",
      "Salesforce",
      "Snapchat",
      "Splunk",
      "Tencent",
      "Uber",
      "Visa",
      "Walmart Labs",
      "Yahoo",
      "Zillow",
    ],
    tags: ["Tree", "Depth-First Search", "Binary Tree", "Grind75"],
  },
  {
    id: "L79",
    title: "Word Search",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/word-search",
    solutions: [
      {
        title: "Word Search - Backtracking - Leetcode 79 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=pfiQ_PS1g8E",
      },
    ],
    companies: [
      "Aetion",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Cruise Automation",
      "Docusign",
      "Facebook",
      "Google",
      "Intuit",
      "caMorgan",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Pinterest",
      "Quantcast",
      "Snapchat",
      "Uber",
      "Yahoo",
      "Zillow",
    ],
    tags: ["Array", "String", "Backtracking", "Matrix", "Blind75", "Grind75"],
  },
  {
    id: "L647",
    title: "Palindromic Substrings",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/palindromic-substrings",
    solutions: [
      {
        title: "Palindromic Substrings - Leetcode 647 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=4RACzI5-du8",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Citadel",
      "Coursera",
      "Facebook",
      "Google",
      "LinkedIn",
      "Mathworks",
      "Microsoft",
      "Pure Storage",
      "SAP",
      "Twitter",
      "Uber",
      "VMware",
    ],
    tags: ["String", "Dynamic Programming", "Blind75"],
  },
  {
    id: "L931",
    title: "Maximum Frequency Stack",
    difficulty: Difficulty.HARD,
    patterns: [patterns.KnowingWhatToTrack],
    url: "https://leetcode.com/problems/maximum-frequency-stack",
    solutions: [
      {
        title: "Minimum Falling Path Sum - Leetcode 931 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=b_F3mz9l-uQ",
      },
    ],
    companies: ["Goldman Sachs", "Google"],
    tags: ["Hash Table", "Stack", "Design", "Ordered Set", "Grind75"],
  },
  {
    id: "L93",
    title: "Restore IP Addresses",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/restore-ip-addresses",
    solutions: [
      {
        title: "Restore IP Addresses - Leetcode 93 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=61tN4YEdiTM",
      },
    ],
    companies: ["Amazon", "Apple", "Facebook", "Microsoft", "VMware", "Yahoo"],
    tags: ["String", "Backtracking"],
  },
  {
    id: "L861",
    title: "Flipping an Image",
    difficulty: Difficulty.EASY,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/flipping-an-image",
    solutions: [],
    companies: ["IIT Bombay"],
    tags: ["Array", "Two Pointers", "Bit Manipulation", "Matrix", "Simulation"],
  },
  {
    id: "L337",
    title: "House Robber III",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/house-robber-iii",
    solutions: [
      {
        title: "House Robber III - Tree - Leetcode 337",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=nHR8ytpzz7c",
      },
    ],
    companies: ["Amazon", "Facebook", "Google", "Uber"],
    tags: ["Dynamic Programming", "Tree", "Depth-First Search", "Binary Tree"],
  },
  {
    id: "L98",
    title: "Validate Binary Search Tree",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/validate-binary-search-tree",
    solutions: [
      {
        title: "Validate Binary Search Tree - Depth First Search - Leetcode 98",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=s6ATEkipzow",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Asana",
      "Bloomberg",
      "Capital One",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Salesforce",
      "TripAdvisor",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yandex",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L205",
    title: "Isomorphic Strings",
    difficulty: Difficulty.EASY,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/isomorphic-strings",
    solutions: [
      {
        title: "Isomorphic Strings - Leetcode 205 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=7yF-U1hLEqQ",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Bloomberg",
      "Google",
      "LinkedIn",
      "Oracle",
      "Salesforce",
      "Yahoo",
      "Yelp",
    ],
    tags: ["Hash Table", "String"],
  },
  {
    id: "L152",
    title: "Maximum Product Subarray",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/maximum-product-subarray",
    solutions: [
      {
        title: "Maximum Product Subarray - Dynamic Programming - Leetcode 152",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=lXVy6YWFcRM",
      },
    ],
    companies: [
      "Adobe",
      "Akuna Capital",
      "Alibaba",
      "Amazon",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Uber",
    ],
    tags: ["Array", "Dynamic Programming", "Blind75", "Grind75"],
  },
  {
    id: "L496",
    title: "Next Greater Element I",
    difficulty: Difficulty.EASY,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/next-greater-element-i",
    solutions: [
      {
        title: "Next Greater Element I - Leetcode 496 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=68a1Dc_qVq4",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Google",
      "Mathworks",
      "Oracle",
      "Twitter",
    ],
    tags: ["Array", "Hash Table", "Stack", "Monotonic Stack"],
  },
  {
    id: "L409",
    title: "Longest Palindrome",
    difficulty: Difficulty.EASY,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/longest-palindrome",
    solutions: [],
    companies: ["Amazon", "Google", "Intuit"],
    tags: ["Hash Table", "String", "Greedy", "Grind75"],
  },
  {
    id: "L260",
    title: "Single Number III",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.BitwiseManipulation],
    url: "https://leetcode.com/problems/single-number-iii",
    solutions: [],
    companies: ["Amazon", "Facebook"],
    tags: ["Array", "Bit Manipulation"],
  },
  {
    id: "L473",
    title: "Matchsticks to Square",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/matchsticks-to-square",
    solutions: [
      {
        title: "Matchsticks to Square - Leetcode 473 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=hUe0cUKV-YY",
      },
    ],
    companies: ["Rackspace"],
    tags: [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask",
    ],
  },
  {
    id: "L199",
    title: "Binary Tree Right Side View",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/binary-tree-right-side-view",
    solutions: [
      {
        title:
          "Binary Tree Right Side View - Breadth First Search - Leetcode 199",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=d4zLyf32e3I",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Citadel",
      "eBay",
      "Facebook",
      "Mathworks",
      "Microsoft",
      "Paypal",
      "Uber",
      "VMware",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
      "Grind75",
    ],
  },
  {
    id: "L359",
    title: "Logger Rate Limiter",
    difficulty: Difficulty.EASY,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/logger-rate-limiter",
    solutions: [],
    companies: ["Amazon", "Google", "Uber"],
    tags: ["Hash Table", "Design", "Data Stream"],
  },
  {
    id: "L416",
    title: "Partition Equal Subset Sum",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/partition-equal-subset-sum",
    solutions: [
      {
        title:
          "Partition Equal Subset Sum - Dynamic Programming - Leetcode 416 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=IsvocB5BJhw",
      },
    ],
    companies: [
      "Amazon",
      "eBay",
      "Facebook",
      "Google",
      "Microsoft",
      "Paypal",
      "Uber",
      "VMware",
      "Yahoo",
    ],
    tags: ["Array", "Dynamic Programming", "Grind75"],
  },
  {
    id: "L278",
    title: "First Bad Version",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/first-bad-version",
    solutions: [],
    companies: [
      "Adobe",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Uber",
    ],
    tags: ["Binary Search", "Interactive", "Grind75"],
  },
  {
    id: "L792",
    title: "Binary Search",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/binary-search",
    solutions: [],
    companies: ["Amazon", "Facebook", "Google"],
    tags: ["Array", "Binary Search", "Grind75"],
  },
  {
    id: "N659",
    title: "Encode and Decode Strings",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.BitwiseManipulation],
    url: "https://www.lintcode.com/problem/659/",
    solutions: [
      {
        title: "Solution: Encode and Decode Strings",
        site: {},
        url: "https://algo.monster/liteproblems/271",
      },
      {
        title: "Encode and Decode Strings - Leetcode 271 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=B1k_sxOSgv8",
      },
      {
        title: "Encode and Decode Strings - LeetCodeCa",
        site: {},
        url: "https://leetcode.ca/2016-08-27-271-Encode-and-Decode-Strings/",
      },
    ],
    companies: [],
    tags: ["Array", "String", "Design"],
  },
  {
    id: "L37",
    title: "Sudoku Solver",
    difficulty: Difficulty.HARD,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/sudoku-solver",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Arista Networks",
      "Expedia",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Riot Games",
      "Snapchat",
      "Uber",
      "VMware",
    ],
    tags: ["Array", "Hash Table", "Backtracking", "Matrix", "Grind75"],
  },
  {
    id: "L114",
    title: "Flatten Binary Tree to Linked List",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/flatten-binary-tree-to-linked-list",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Coupang",
      "Databricks",
      "Facebook",
      "Google",
      "Microsoft",
      "Nvidia",
      "Oracle",
      "Uber",
      "Yahoo",
    ],
    tags: ["Linked List", "Stack", "Tree", "Depth-First Search", "Binary Tree"],
  },
  {
    id: "L817",
    title: "Design HashMap",
    difficulty: Difficulty.EASY,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/design-hashmap",
    solutions: [],
    companies: ["Google"],
    tags: ["Array", "Hash Table", "Linked List", "Design", "Hash Function"],
  },
  {
    id: "L213",
    title: "House Robber II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/house-robber-ii",
    solutions: [
      {
        title: "House Robber II - Dynamic Programming - Leetcode 213",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=rWAJCfYYOvM",
      },
    ],
    companies: ["Google", "Microsoft", "Salesforce"],
    tags: ["Array", "Dynamic Programming", "Blind75"],
  },
  {
    id: "L33",
    title: "Search in Rotated Sorted Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/search-in-rotated-sorted-array",
    solutions: [
      {
        title: "Search in rotated sorted array - Leetcode 33 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=U8XENwh8Oy8",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "eBay",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "caMorgan",
      "LinkedIn",
      "Microsoft",
      "NetEase",
      "Nutanix",
      "Nvidia",
      "Oracle",
      "Samsung",
      "Snapchat",
      "Tencent",
      "Tesla",
      "TripAdvisor",
      "Twitch",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Zillow",
      "Zulily",
    ],
    tags: ["Array", "Binary Search", "Blind75", "Grind75"],
  },
  {
    id: "L658",
    title: "Find K Closest Elements",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/find-k-closest-elements",
    solutions: [
      {
        title: "Find K Closest Elements - Leetcode 658 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=o-YDQzHoaKM",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Snapchat",
      "Uber",
    ],
    tags: [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)",
      "Grind75",
    ],
  },
  {
    id: "L789",
    title: "Kth Largest Element in a Stream",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/kth-largest-element-in-a-stream",
    solutions: [],
    companies: ["Google"],
    tags: [
      "Tree",
      "Design",
      "Binary Search Tree",
      "Heap (Priority Queue)",
      "Binary Tree",
      "Data Stream",
    ],
  },
  {
    id: "L51",
    title: "N-Queens",
    difficulty: Difficulty.HARD,
    patterns: [patterns.Backtracking],
    url: "https://leetcode.com/problems/n-queens",
    solutions: [
      {
        title: "N-Queens - Backtracking - Leetcode 51 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Ph95IHmRp5M",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Rubrik",
      "Tableau",
      "Uber",
    ],
    tags: ["Array", "Backtracking", "Grind75"],
  },
  {
    id: "L105",
    title: "Construct Binary Tree from Preorder and Inorder Traversal",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
    solutions: [
      {
        title:
          "Construct Binary Tree from Inorder and Preorder Traversal - Leetcode 105 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=ihj4IQGZ2zc",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Square",
      "Twitter",
      "Yahoo",
    ],
    tags: [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L166",
    title: "Fraction to Recurring Decimal",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.HashMaps],
    url: "https://leetcode.com/problems/fraction-to-recurring-decimal",
    solutions: [],
    companies: [
      "Airbnb",
      "Amazon",
      "Cohesity",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "IXL",
      "Rubrik",
      "Tencent",
      "Uber",
    ],
    tags: ["Hash Table", "Math", "String"],
  },
  {
    id: "L542",
    title: "01 Matrix",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/01-matrix",
    solutions: [],
    companies: ["Amazon", "Google", "Uber"],
    tags: [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix",
      "Grind75",
    ],
  },
  {
    id: "L81",
    title: "Search in Rotated Sorted Array II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/search-in-rotated-sorted-array-ii",
    solutions: [
      {
        title: "Search in Rotated Sorted Array II - Leetcode 81 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=oUnF7o88_Xc",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
    ],
    tags: ["Array", "Binary Search"],
  },
  {
    id: "L215",
    title: "Kth Largest Element in an Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/kth-largest-element-in-an-array",
    solutions: [
      {
        title:
          "Kth Largest Element in an Array - Quick Select - Leetcode 215 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=XEmy13g1Qxc",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "caMorgan",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Pocket Gems",
      "Salesforce",
      "Snapchat",
      "Uber",
      "VMware",
      "Yahoo",
    ],
    tags: [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect",
      "Grind75",
    ],
  },
  {
    id: "L347",
    title: "Top K Frequent Elements",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/top-k-frequent-elements",
    solutions: [
      {
        title: "Top K Frequent Elements - Bucket Sort - Leetcode 347 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=YPTqKIgVk-k",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Pocket Gems",
      "Salesforce",
      "Snapchat",
      "Spotify",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yelp",
    ],
    tags: [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect",
      "Blind75",
    ],
  },
  {
    id: "L692",
    title: "Top K Frequent Words",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/top-k-frequent-words",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Expedia",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Pocket Gems",
      "Salesforce",
      "TripAdvisor",
      "Uber",
      "VMware",
      "Yahoo",
      "Yelp",
    ],
    tags: [
      "Hash Table",
      "String",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Grind75",
    ],
  },
  {
    id: "L230",
    title: "Kth Smallest Element in a BST",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/kth-smallest-element-in-a-bst",
    solutions: [],
    companies: [
      "Affirm",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Hulu",
      "Microsoft",
      "Oracle",
      "TripleByte",
      "Uber",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L990",
    title: "Verifying an Alien Dictionary",
    difficulty: Difficulty.EASY,
    patterns: [patterns.TopologicalSort],
    url: "https://leetcode.com/problems/verifying-an-alien-dictionary",
    solutions: [],
    companies: ["Sumologic"],
    tags: ["Array", "Hash Table", "String"],
  },
  {
    id: "L1250",
    title: "Longest Common Subsequence",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/longest-common-subsequence",
    solutions: [],
    companies: ["Dropbox"],
    tags: ["String", "Dynamic Programming"],
  },
  {
    id: "L540",
    title: "Single Element in a Sorted Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/single-element-in-a-sorted-array",
    solutions: [
      {
        title: "Single Element in a Sorted Array - Leetcode 540 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=HGtqdzyUJ3k",
      },
    ],
    companies: ["Amazon", "Apple", "Facebook", "Google", "Microsoft"],
    tags: ["Array", "Binary Search"],
  },
  {
    id: "L207",
    title: "Course Schedule",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopologicalSort],
    url: "https://leetcode.com/problems/course-schedule",
    solutions: [
      {
        title: "Course Schedule - Graph Adjacency List - Leetcode 207",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=EgI5nU9etnU",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cohesity",
      "eBay",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Intuit",
      "LinkedIn",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Paypal",
      "Salesforce",
      "Uber",
      "Yahoo",
      "Yelp",
      "Zenefits",
    ],
    tags: [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L778",
    title: "Reorganize String",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/reorganize-string",
    solutions: [
      {
        title:
          "Swim in Rising Water - Dijkstra's Algorithm - Leetcode 778 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=amvrKlMLuGY",
      },
    ],
    companies: ["Facebook", "Google"],
    tags: [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting",
    ],
  },
  {
    id: "L210",
    title: "Course Schedule II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopologicalSort],
    url: "https://leetcode.com/problems/course-schedule-ii",
    solutions: [
      {
        title: "Course Schedule II - Topological Sort - Leetcode 210",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Akt3glAwyfY",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "DoorDash",
      "Facebook",
      "Google",
      "Intuit",
      "Microsoft",
      "Nutanix",
      "Palantir Technologies",
      "Pinterest",
      "Square",
      "Uber",
      "Walmart Labs",
      "Zenefits",
    ],
    tags: [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Grind75",
    ],
  },
  {
    id: "L297",
    title: "Serialize and Deserialize Binary Tree",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    solutions: [
      {
        title:
          "Serialize and Deserialize Binary Tree - Preorder Traversal - Leetcode 297 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=u4JAi2JJhI8",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Citadel",
      "eBay",
      "Expedia",
      "Facebook",
      "Google",
      "Groupon",
      "Indeed",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Qualtrics",
      "Quora",
      "Salesforce",
      "Tableau",
      "Uber",
      "VMware",
      "Yahoo",
    ],
    tags: [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L2220",
    title: "Find All Possible Recipes from Given Supplies",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopologicalSort],
    url: "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",
    solutions: [],
    companies: [],
    tags: ["Array", "Hash Table", "String", "Graph", "Topological Sort"],
  },
  {
    id: "G1",
    title: "0/1 Knapsack",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.DynamicProgramming],
    url: "https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/",
    solutions: [
      {
        title: "0-1 Knapsack",
        site: {},
        url: "https://algo.monster/problems/knapsack_intro",
      },
    ],
    companies: [],
    tags: ["Dynamic Programming", "Greedy"],
  },
  {
    id: "L912",
    title: "Random Pick with Weight",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ModifiedBinarySearch],
    url: "https://leetcode.com/problems/random-pick-with-weight",
    solutions: [
      {
        title: "Sort an Array - Leetcode 912 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=MsYZSinhuFo",
      },
    ],
    companies: ["Apple", "Bloomberg"],
    tags: [
      "Array",
      "Math",
      "Binary Search",
      "Prefix Sum",
      "Randomized",
      "Grind75",
    ],
  },
  {
    id: "L200",
    title: "Number of Islands",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/number-of-islands",
    solutions: [
      {
        title: "NUMBER OF ISLANDS - Leetcode 200 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=pV2kpPD66nE",
      },
    ],
    companies: [
      "Adobe",
      "Affirm",
      "Alibaba",
      "Amazon",
      "AppDynamics",
      "Apple",
      "Arista Networks",
      "Atlassian",
      "Audible",
      "BlackRock",
      "Bloomberg",
      "Cisco",
      "Citadel",
      "Citrix",
      "Coursera",
      "Cruise Automation",
      "DoorDash",
      "eBay",
      "Electronic Arts",
      "Evernote",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Houzz",
      "Hulu",
      "caMorgan",
      "LinkedIn",
      "LiveRamp",
      "Lyft",
      "Mathworks",
      "Microsoft",
      "Nutanix",
      "Nvidia",
      "Oracle",
      "Palantir Technologies",
      "Paypal",
      "Qualtrics",
      "Salesforce",
      "SAP",
      "Snapchat",
      "Splunk",
      "Spotify",
      "Square",
      "Sumologic",
      "Tableau",
      "Twitch",
      "Twitter",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Wish",
      "Yahoo",
      "Yelp",
      "Zenefits",
      "Zulily",
    ],
    tags: [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L1014",
    title: "K Closest Points to Origin",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.TopKElements],
    url: "https://leetcode.com/problems/k-closest-points-to-origin",
    solutions: [],
    companies: ["Wayfair"],
    tags: [
      "Array",
      "Math",
      "Divide and Conquer",
      "Geometry",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect",
      "Grind75",
    ],
  },
  {
    id: "L128",
    title: "Longest Consecutive Sequence",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/longest-consecutive-sequence",
    solutions: [
      {
        title: "Leetcode 128 - LONGEST CONSECUTIVE SEQUENCE",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=P6RZZMu_maU",
      },
    ],
    companies: [
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Spotify",
      "Uber",
      "Wish",
    ],
    tags: ["Array", "Hash Table", "Union Find", "Blind75", "Grind75"],
  },
  {
    id: "L124",
    title: "Binary Tree Maximum Path Sum",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TreeDepthFirstSearch],
    url: "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    solutions: [
      {
        title: "Binary Tree Maximum Path Sum - DFS - Leetcode 124 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Hr5cWUld4vU",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "AppDynamics",
      "Apple",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Google",
      "Intuit",
      "Microsoft",
      "Twitter",
      "Uber",
      "Walmart Labs",
    ],
    tags: [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L269",
    title: "Alien Dictionary",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TopologicalSort],
    url: "https://leetcode.com/problems/alien-dictionary",
    solutions: [
      {
        title: "Alien Dictionary - Topological Sort - Leetcode 269 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=6kTZYvNNyps",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cohesity",
      "Facebook",
      "Flipkart",
      "Google",
      "Microsoft",
      "Oracle",
      "Pinterest",
      "Pocket Gems",
      "Snapchat",
      "Square",
      "Twitter",
      "Uber",
      "VMware",
    ],
    tags: [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L140",
    title: "Word Break II",
    difficulty: Difficulty.HARD,
    patterns: [patterns.DynamicProgramming],
    url: "https://leetcode.com/problems/word-break-ii",
    solutions: [],
    companies: [
      "Amazon",
      "Apple",
      "Audible",
      "Bloomberg",
      "Dropbox",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Pinterest",
      "Snapchat",
      "Twitter",
      "Uber",
      "Zillow",
    ],
    tags: [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization",
    ],
  },
  {
    id: "L721",
    title: "Accounts Merge",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/accounts-merge",
    solutions: [
      {
        title: "Accounts Merge - Leetcode 721 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=6st4IxEF-90",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Houzz",
      "LinkedIn",
      "Microsoft",
      "Oracle",
    ],
    tags: [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Sorting",
      "Grind75",
    ],
  },
  {
    id: "L399",
    title: "Evaluate Division",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/evaluate-division",
    solutions: [
      {
        title: "Evaluate Division - Leetcode 399 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Uei1fwDoyKk",
      },
    ],
    companies: ["Adobe", "Amazon", "Bloomberg", "Facebook", "Google", "Uber"],
    tags: [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path",
    ],
  },
  {
    id: "L146",
    title: "LRU Cache",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/lru-cache",
    solutions: [
      {
        title: "LRU Cache - Twitch Interview Question - Leetcode 146",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=7ABFKPK2hD4",
      },
    ],
    companies: [
      "Adobe",
      "Affirm",
      "Alibaba",
      "Amazon",
      "Apple",
      "Asana",
      "Baidu",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "Citadel",
      "Cloudera",
      "Cruise Automation",
      "DoorDash",
      "Dropbox",
      "eBay",
      "Expedia",
      "Facebook",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Groupon",
      "HBO",
      "Intuit",
      "caMorgan",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Morgan Stanley",
      "Nutanix",
      "Nvidia",
      "Oracle",
      "Palantir Technologies",
      "Paypal",
      "Pinterest",
      "Roblox",
      "Salesforce",
      "SAP",
      "Snapchat",
      "Splunk",
      "Spotify",
      "Tesla",
      "TripAdvisor",
      "Twilio",
      "Twitch",
      "Twitter",
      "Two Sigma",
      "Uber",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Wish",
      "Yahoo",
      "Yandex",
      "Zenefits",
      "Zillow",
    ],
    tags: [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List",
      "Grind75",
    ],
  },
  {
    id: "L380",
    title: "Insert Delete GetRandom O(1)",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/insert-delete-getrandom-o1",
    solutions: [
      {
        title: "Insert Delete GetRandom O(1) - Leetcode 380 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=j4KwhBziOpg",
      },
    ],
    companies: [
      "Adobe",
      "Affirm",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Databricks",
      "Facebook",
      "Flipkart",
      "Goldman Sachs",
      "Google",
      "Indeed",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Pinterest",
      "Pocket Gems",
      "Quora",
      "Salesforce",
      "Twitter",
      "Two Sigma",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yandex",
      "Yelp",
    ],
    tags: ["Array", "Hash Table", "Math", "Design", "Randomized", "Grind75"],
  },
  {
    id: "L56",
    title: "Merge Intervals",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/merge-intervals",
    solutions: [
      {
        title: "Merge Intervals - Sorting - Leetcode 56",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=44H3cEC2fFM",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Cisco",
      "Coupang",
      "Cruise Automation",
      "Dataminr",
      "DoorDash",
      "Facebook",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Intuit",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Palantir Technologies",
      "Pinterest",
      "Postmates",
      "Salesforce",
      "SAP",
      "Snapchat",
      "Sumologic",
      "Twitch",
      "Twitter",
      "Two Sigma",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Wayfair",
      "Wish",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zenefits",
      "Zulily",
    ],
    tags: ["Array", "Sorting", "Blind75", "Grind75"],
  },
  {
    id: "E1",
    title: "Compilation Order",
    difficulty: Difficulty.ABSENT,
    patterns: [patterns.TopologicalSort],
    url: "https://www.educative.io/courses/grokking-coding-interview-patterns-java/compilation-order",
    solutions: [],
    companies: [],
    tags: [],
  },
  {
    id: "L155",
    title: "Min Stack",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/min-stack",
    solutions: [
      {
        title:
          "Design Min Stack - Amazon Interview Question - Leetcode 155 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=qkLl7nAwDPo",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Flipkart",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Intuit",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Pure Storage",
      "Snapchat",
      "Uber",
      "Visa",
      "Walmart Labs",
      "Wish",
      "Zenefits",
    ],
    tags: ["Stack", "Design", "Grind75"],
  },
  {
    id: "L253",
    title: "Meeting Rooms II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/meeting-rooms-ii",
    solutions: [
      {
        title: "Meeting Rooms II - Leetcode 253 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=FdzJmTCVyJU",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Atlassian",
      "Baidu",
      "Bloomberg",
      "Booking.com",
      "Cisco",
      "Citrix",
      "Drawbridge",
      "eBay",
      "Expedia",
      "Facebook",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Lyft",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Paypal",
      "Postmates",
      "Quora",
      "Snapchat",
      "Uber",
      "Visa",
      "Walmart Labs",
      "Yelp",
    ],
    tags: [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L684",
    title: "Redundant Connection",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/redundant-connection",
    solutions: [
      {
        title: "Redundant Connection - Union Find - Leetcode 684 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=FXWRE67PLL0",
      },
    ],
    companies: ["Amazon", "Google"],
    tags: ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"],
  },
  {
    id: "L1146",
    title: "Snapshot Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/snapshot-array",
    solutions: [],
    companies: ["Amazon", "Bloomberg", "Facebook"],
    tags: ["Array", "Hash Table", "Binary Search", "Design"],
  },
  {
    id: "L57",
    title: "Insert Interval",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/insert-interval",
    solutions: [
      {
        title: "Insert Interval - Leetcode 57 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=A8NUOmlwOlM",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Dataminr",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Tableau",
      "Twitter",
      "Uber",
      "Yahoo",
    ],
    tags: ["Array", "Blind75", "Grind75"],
  },
  {
    id: "L621",
    title: "Task Scheduler",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/task-scheduler",
    solutions: [
      {
        title: "Task Scheduler - Leetcode 621 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=s8p8ukTyA2I",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Uber",
      "VMware",
    ],
    tags: [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting",
      "Grind75",
    ],
  },
  {
    id: "L54",
    title: "Spiral Matrix",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Matrices],
    url: "https://leetcode.com/problems/spiral-matrix",
    solutions: [
      {
        title: "Spiral Matrix - Microsoft Interview Question - Leetcode 54",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=BJnMZNwUk1M",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "Drawbridge",
      "eBay",
      "Epic Systems",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Hulu",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Quip (Salesforce)",
      "Robinhood",
      "Snapchat",
      "Twitch",
      "Uber",
      "Visa",
      "Walmart Labs",
      "Zillow",
    ],
    tags: ["Array", "Matrix", "Simulation", "Blind75", "Grind75"],
  },
  {
    id: "L48",
    title: "Rotate Image",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Matrices],
    url: "https://leetcode.com/problems/rotate-image",
    solutions: [
      {
        title: "Rotate Image - Matrix - Leetcode 48",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=fMSJSS7eO1w",
      },
    ],
    companies: [
      "Adobe",
      "Akuna Capital",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Cisco",
      "Facebook",
      "Google",
      "Groupon",
      "Houzz",
      "Lyft",
      "Microsoft",
      "Nvidia",
      "Palantir Technologies",
      "Quora",
      "Salesforce",
      "Samsung",
      "Wish",
      "Yandex",
    ],
    tags: ["Array", "Math", "Matrix", "Blind75", "Grind75"],
  },
  {
    id: "L17",
    title: "Letter Combinations of a Phone Number",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Subsets],
    url: "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    solutions: [
      {
        title:
          "Letter Combinations of a Phone Number - Backtracking - Leetcode 17",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=0snEunUacZY",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Dropbox",
      "eBay",
      "Facebook",
      "Google",
      "caMorgan",
      "Lyft",
      "Microsoft",
      "Morgan Stanley",
      "Nutanix",
      "Oracle",
      "Pinterest",
      "Quip (Salesforce)",
      "Roblox",
      "Salesforce",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Hash Table", "String", "Backtracking", "Grind75"],
  },
  {
    id: "L984",
    title: "Most Stones Removed with Same Row or Column",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",
    solutions: [],
    companies: ["Grab", "zalando"],
    tags: ["Hash Table", "Depth-First Search", "Union Find", "Graph"],
  },
  {
    id: "L1023",
    title: "Time Based Key-Value Store",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/time-based-key-value-store",
    solutions: [],
    companies: ["Amazon", "Google"],
    tags: ["Hash Table", "String", "Binary Search", "Design", "Grind75"],
  },
  {
    id: "L73",
    title: "Set Matrix Zeroes",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Matrices],
    url: "https://leetcode.com/problems/set-matrix-zeroes",
    solutions: [
      {
        title: "Set Matrix Zeroes - In-place - Leetcode 73",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=T41rL0L3Pnw",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Docusign",
      "Expedia",
      "Facebook",
      "Microsoft",
      "Oracle",
      "Paypal",
      "Salesforce",
      "TripAdvisor",
    ],
    tags: ["Array", "Hash Table", "Matrix", "Blind75", "Grind75"],
  },
  {
    id: "L1028",
    title: "Interval List Intersections",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/interval-list-intersections",
    solutions: [],
    companies: ["Amazon", "LinkedIn"],
    tags: ["Array", "Two Pointers"],
  },
  {
    id: "L1324",
    title: "Where Will the Ball Fall",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Matrices],
    url: "https://leetcode.com/problems/where-will-the-ball-fall",
    solutions: [],
    companies: ["Microsoft"],
    tags: ["Array", "Matrix", "Simulation"],
  },
  {
    id: "L46",
    title: "Permutations",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Subsets],
    url: "https://leetcode.com/problems/permutations",
    solutions: [
      {
        title: "Backtracking: Permutations - Leetcode 46 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=s7AvT7cGdSo",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Facebook",
      "Garena",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Microsoft",
      "NetEase",
      "Oracle",
      "Paypal",
      "Salesforce",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Array", "Backtracking", "Grind75"],
  },
  {
    id: "L22",
    title: "Generate Parentheses",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Subsets],
    url: "https://leetcode.com/problems/generate-parentheses",
    solutions: [
      {
        title: "Generate Parentheses - Stack - Leetcode 22",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=s9fokUqJ76A",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Lyft",
      "Microsoft",
      "Nutanix",
      "Nvidia",
      "Samsung",
      "SAP",
      "Snapchat",
      "Spotify",
      "Uber",
      "Walmart Labs",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zenefits",
    ],
    tags: ["String", "Dynamic Programming", "Backtracking", "Grind75"],
  },
  {
    id: "L999",
    title: "Regions Cut By Slashes",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/regions-cut-by-slashes",
    solutions: [],
    companies: ["Square"],
    tags: [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix",
    ],
  },
  {
    id: "L460",
    title: "LFU Cache",
    difficulty: Difficulty.HARD,
    patterns: [patterns.CustomDataStructures],
    url: "https://leetcode.com/problems/lfu-cache",
    solutions: [
      {
        title: "LFU Cache - Leetcode 460 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=bLEIHn-DgoA",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Pinterest",
      "Salesforce",
      "Snapchat",
      "Uber",
      "VMware",
    ],
    tags: ["Hash Table", "Linked List", "Design", "Doubly-Linked List"],
  },
  {
    id: "L560",
    title: "Subarray Sum Equals K",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Subsets],
    url: "https://leetcode.com/problems/subarray-sum-equals-k",
    solutions: [
      {
        title: "Subarray Sum Equals K - Prefix Sums - Leetcode 560 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=fFVZt-6sgyo",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "eBay",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Indeed",
      "LinkedIn",
      "Microsoft",
      "Oracle",
      "Quora",
      "Snapchat",
      "Twilio",
      "Uber",
      "Wish",
      "Yandex",
    ],
    tags: ["Array", "Hash Table", "Prefix Sum", "Grind75"],
  },
  {
    id: "L761",
    title: "Employee Free Time",
    difficulty: Difficulty.HARD,
    patterns: [patterns.MergeIntervals],
    url: "https://leetcode.com/problems/employee-free-time",
    solutions: [],
    companies: ["Citrix", "Coursera", "Quip (Salesforce)", "Visa"],
    tags: ["Array", "Sorting", "Heap (Priority Queue)", "Grind75"],
  },
  {
    id: "L208",
    title: "Implement Trie (Prefix Tree)",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/implement-trie-prefix-tree",
    solutions: [
      {
        title: "Implement Trie (Prefix Tree) - Leetcode 208",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=oobqoCJlHA0",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "eBay",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Quip (Salesforce)",
      "Square",
      "Twitter",
      "Uber",
      "Walmart Labs",
      "Yelp",
    ],
    tags: ["Hash Table", "String", "Design", "Trie", "Blind75", "Grind75"],
  },
  {
    id: "L211",
    title: "Design Add and Search Words Data Structure",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    solutions: [
      {
        title:
          "Design Add and Search Words Data Structure - Leetcode 211 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=BTf05gs_8iU",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Salesforce",
      "Uber",
    ],
    tags: ["String", "Depth-First Search", "Design", "Trie", "Grind75"],
  },
  {
    id: "L78",
    title: "Subsets",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Subsets],
    url: "https://leetcode.com/problems/subsets",
    solutions: [
      {
        title: "Subsets - Backtracking - Leetcode 78",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=REOH22Xwdkk",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Coupang",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Uber",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Array", "Backtracking", "Bit Manipulation", "Grind75"],
  },
  {
    id: "L960",
    title: "Minimize Malware Spread",
    difficulty: Difficulty.HARD,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/minimize-malware-spread",
    solutions: [],
    companies: ["Google"],
    tags: [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
    ],
  },
  {
    id: "L386",
    title: "Lexicographical Numbers",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/lexicographical-numbers",
    solutions: [],
    companies: ["Adobe", "Bloomberg", "Google"],
    tags: ["Depth-First Search", "Trie"],
  },
  {
    id: "L133",
    title: "Clone Graph",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Graphs],
    url: "https://leetcode.com/problems/clone-graph",
    solutions: [
      {
        title: "Clone Graph - Depth First Search - Leetcode 133",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=mQeF6bN8hMk",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "LinkedIn",
      "Mathworks",
      "Microsoft",
      "Pocket Gems",
      "Splunk",
      "Twitter",
      "Uber",
      "Walmart Labs",
    ],
    tags: [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L261",
    title: "Graph Valid Tree",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Graphs],
    url: "https://leetcode.com/problems/graph-valid-tree",
    solutions: [
      {
        title: "Graph Valid Tree - Leetcode 261 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=bXsUuownnoQ",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Facebook",
      "Google",
      "LinkedIn",
      "Pinterest",
      "Salesforce",
      "Zenefits",
    ],
    tags: [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L1397",
    title: "Search Suggestions System",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/search-suggestions-system",
    solutions: [],
    companies: ["dunzo"],
    tags: [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
    ],
  },
  {
    id: "L744",
    title: "Network Delay Time",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Graphs],
    url: "https://leetcode.com/problems/network-delay-time",
    solutions: [],
    companies: ["LinkedIn"],
    tags: [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path",
    ],
  },
  {
    id: "L45",
    title: "Jump Game II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/jump-game-ii",
    solutions: [
      {
        title: "Jump Game II - Greedy - Leetcode 45 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=dJ7sWiOoK7g",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Huawei",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Uber",
    ],
    tags: ["Array", "Dynamic Programming", "Greedy"],
  },
  {
    id: "L2101",
    title: "Last Day Where You Can Still Cross",
    difficulty: Difficulty.HARD,
    patterns: [patterns.UnionFind],
    url: "https://leetcode.com/problems/last-day-where-you-can-still-cross",
    solutions: [
      {
        title: "Detonate the Maximum Bombs - Leetcode 2101 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=8NPbAvVXKR4",
      },
    ],
    companies: [],
    tags: [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix",
    ],
  },
  {
    id: "L55",
    title: "Jump Game",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/jump-game",
    solutions: [
      {
        title: "Jump Game - Greedy - Leetcode 55",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Yan0cv2cLy8",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Postmates",
      "Uber",
    ],
    tags: ["Array", "Dynamic Programming", "Greedy", "Blind75", "Grind75"],
  },
  {
    id: "L2218",
    title: "Paths in Maze That Lead to Same Room",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Graphs],
    url: "https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room",
    solutions: [
      {
        title: "Maximum Value of K Coins from Piles - Leetcode 2218 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=ZRdEd_eun8g",
      },
    ],
    companies: [],
    tags: ["Graph"],
  },
  {
    id: "L134",
    title: "Gas Station",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/gas-station",
    solutions: [
      {
        title: "Gas Station - Greedy - Leetcode 134 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=lJwbPZGo05A",
      },
    ],
    companies: [
      "Amazon",
      "Expedia",
      "Facebook",
      "Google",
      "IBM",
      "Microsoft",
      "Paypal",
    ],
    tags: ["Array", "Greedy", "Grind75"],
  },
  {
    id: "L648",
    title: "Replace Words",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/replace-words",
    solutions: [],
    companies: ["Uber"],
    tags: ["Array", "Hash Table", "String", "Trie"],
  },
  {
    id: "L1095",
    title: "Two City Scheduling",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/two-city-scheduling",
    solutions: [
      {
        title: "Find in Mountain Array - Leetcode 1095 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=BGgYC-YkGvc",
      },
    ],
    companies: ["Apple", "Google"],
    tags: ["Array", "Greedy", "Sorting"],
  },
  {
    id: "L295",
    title: "Find Median from Data Stream",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TwoHeaps],
    url: "https://leetcode.com/problems/find-median-from-data-stream",
    solutions: [
      {
        title:
          "Find Median from Data Stream - Heap & Priority Queue - Leetcode 295",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=itmhHWaHupI",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Atlassian",
      "Bloomberg",
      "ByteDance",
      "eBay",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Microsoft",
      "Netflix",
      "Oracle",
      "Pinterest",
      "Qualtrics",
      "Snapchat",
      "Twitter",
      "Uber",
      "VMware",
      "Yahoo",
    ],
    tags: [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L480",
    title: "Sliding Window Median",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TwoHeaps],
    url: "https://leetcode.com/problems/sliding-window-median",
    solutions: [],
    companies: ["Amazon", "Facebook", "Google", "Oracle", "Snapchat"],
    tags: ["Array", "Hash Table", "Sliding Window", "Heap (Priority Queue)"],
  },
  {
    id: "L833",
    title: "Bus Routes",
    difficulty: Difficulty.HARD,
    patterns: [patterns.Graphs],
    url: "https://leetcode.com/problems/bus-routes",
    solutions: [],
    companies: ["Google", "LinkedIn", "Microsoft"],
    tags: ["Array", "Hash Table", "Breadth-First Search", "Grind75"],
  },
  {
    id: "L212",
    title: "Word Search II",
    difficulty: Difficulty.HARD,
    patterns: [patterns.Trie],
    url: "https://leetcode.com/problems/word-search-ii",
    solutions: [
      {
        title: "Word Search II - Backtracking Trie - Leetcode 212 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=asbcE9mZz_U",
      },
    ],
    companies: [
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Citadel",
      "Facebook",
      "Google",
      "Houzz",
      "Microsoft",
      "Oracle",
      "Snapchat",
      "Uber",
      "Yahoo",
    ],
    tags: [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L502",
    title: "IPO",
    difficulty: Difficulty.HARD,
    patterns: [patterns.TwoHeaps],
    url: "https://leetcode.com/problems/ipo",
    solutions: [
      {
        title: "IPO - Leetcode 502 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=1IUzNJ6TPEM",
      },
    ],
    companies: [],
    tags: ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"],
  },
  {
    id: "L917",
    title: "Boats to Save People",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/boats-to-save-people",
    solutions: [],
    companies: ["Google", "Microsoft"],
    tags: ["Array", "Two Pointers", "Greedy", "Sorting"],
  },
  {
    id: "L902",
    title: "Minimum Number of Refueling Stops",
    difficulty: Difficulty.HARD,
    patterns: [patterns.GreedyTechniques],
    url: "https://leetcode.com/problems/minimum-number-of-refueling-stops",
    solutions: [],
    companies: ["Amazon"],
    tags: ["Array", "Dynamic Programming", "Greedy", "Heap (Priority Queue)"],
  },
  {
    id: "L1",
    title: "Two Sum",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/two-sum",
    solutions: [
      {
        title: "Two Sum - Leetcode 1 - HashMap - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=KLlXCFG5TnA",
      },
    ],
    companies: [
      "Adobe",
      "Aetion",
      "Affirm",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Audible",
      "Baidu",
      "BlackRock",
      "Bloomberg",
      "Booking.com",
      "Box",
      "ByteDance",
      "Cisco",
      "Citadel",
      "Citrix",
      "Deutsche Bank",
      "DiDi",
      "Drawbridge",
      "Dropbox",
      "eBay",
      "EMC",
      "Expedia",
      "Facebook",
      "FactSet",
      "GE Digital",
      "GoDaddy",
      "Goldman Sachs",
      "Google",
      "Groupon",
      "Huawei",
      "IBM",
      "Indeed",
      "Intel",
      "Intuit",
      "caMorgan",
      "LinkedIn",
      "Lyft",
      "MAQ Software",
      "Mathworks",
      "Microsoft",
      "Morgan Stanley",
      "NetEase",
      "Nvidia",
      "Oracle",
      "Paypal",
      "Qualcomm",
      "Quora",
      "Radius",
      "Roblox",
      "Salesforce",
      "Samsung",
      "SAP",
      "ServiceNow",
      "Snapchat",
      "Splunk",
      "Spotify",
      "Tableau",
      "Tencent",
      "Twilio",
      "Twitter",
      "Two Sigma",
      "Uber",
      "Valve",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Wayfair",
      "Wish",
      "Works Applications",
      "Yahoo",
      "Yandex",
      "Yelp",
      "Zillow",
      "Zoho",
    ],
    tags: ["Array", "Hash Table", "Blind75", "Grind75"],
  },
  {
    id: "L169",
    title: "Majority Element",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/majority-element",
    solutions: [
      {
        title: "Majority Element - Leetcode 169 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=7pnhv842keE",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Google",
      "NetEase",
      "Snapchat",
      "Tencent",
      "Twitter",
      "Yahoo",
      "Zenefits",
    ],
    tags: [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting",
      "Grind75",
    ],
  },
  {
    id: "L217",
    title: "Contains Duplicate",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/contains-duplicate",
    solutions: [
      {
        title: "Solution: Contains Duplicate",
        site: sites.DesignGurus,
        url: "https://www.designgurus.io/course-play/grokking-the-coding-interview/doc/63d906094c5ef6536969a376",
      },
      {
        title: "Contains Duplicate - Leetcode 217 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=3OamzN90kPg",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Microsoft",
      "Oracle",
      "Palantir Technologies",
      "Yahoo",
    ],
    tags: ["Array", "Hash Table", "Sorting", "Blind75", "Grind75"],
  },
  {
    id: "L572",
    title: "Subtree of Another Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/subtree-of-another-tree",
    solutions: [
      {
        title: "Subtree of Another Tree - Leetcode 572 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=E36O5SWp-LE",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "eBay",
      "Facebook",
      "Google",
      "Microsoft",
      "Samsung",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "String Matching",
      "Binary Tree",
      "Hash Function",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L191",
    title: "Number of 1 Bits",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/number-of-1-bits",
    solutions: [
      {
        title: "Number of 1 Bits - Leetcode 191 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=5Km3utixwZs",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Box",
      "Facebook",
      "Google",
      "Microsoft",
    ],
    tags: ["Divide and Conquer", "Bit Manipulation", "Blind75", "Grind75"],
  },
  {
    id: "L100",
    title: "Same Tree",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/same-tree",
    solutions: [
      {
        title: "Same Tree - Leetcode 100 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=vRbbcKXCxOw",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
    ],
    tags: [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L67",
    title: "Add Binary",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/add-binary",
    solutions: [
      {
        title: "Add Binary - Leetcode 67 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=keuWJ47xG8g",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
    ],
    tags: ["Math", "String", "Bit Manipulation", "Simulation", "Grind75"],
  },
  {
    id: "L252",
    title: "Meeting Rooms",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/meeting-rooms",
    solutions: [
      {
        title: "Meeting Rooms - Leetcode 252 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=PaJxqZVPhbg",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Twitter",
    ],
    tags: ["Array", "Sorting", "Blind75", "Grind75"],
  },
  {
    id: "L448",
    title: "Find All Numbers Disappeared in an Array",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array",
    solutions: [
      {
        title:
          "Find All Numbers Disappeared in an Array - Leetcode 448 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=8i-f24YFWC4",
      },
    ],
    companies: ["Adobe", "Apple", "Facebook", "Google", "Microsoft"],
    tags: ["Array", "Hash Table"],
  },
  {
    id: "L890",
    title: "Lemonade Change",
    difficulty: Difficulty.EASY,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/lemonade-change",
    solutions: [],
    companies: ["Amazon", "Apple", "Google"],
    tags: ["Array", "Greedy"],
  },
  {
    id: "L53",
    title: "Maximum Subarray",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/maximum-subarray",
    solutions: [
      {
        title:
          "Maximum Subarray - Amazon Coding Interview Question - Leetcode 53 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=5WZl3MMT0Eg",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Asana",
      "Atlassian",
      "Bloomberg",
      "ByteDance",
      "Capital One",
      "Cisco",
      "Citadel",
      "eBay",
      "Evernote",
      "Expedia",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Intel",
      "caMorgan",
      "LinkedIn",
      "Microsoft",
      "Morgan Stanley",
      "Nvidia",
      "Oracle",
      "Palantir Technologies",
      "Paypal",
      "Salesforce",
      "SAP",
      "Two Sigma",
      "Uber",
      "Walmart Labs",
      "Wayfair",
      "Yahoo",
      "Zillow",
    ],
    tags: [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L238",
    title: "Product of Array Except Self",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/product-of-array-except-self",
    solutions: [
      {
        title: "Product of Array Except Self - Leetcode 238 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=bNvIQI2wAjk",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Asana",
      "BlackRock",
      "Bloomberg",
      "eBay",
      "Evernote",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Grab",
      "Groupon",
      "Hulu",
      "Intel",
      "LinkedIn",
      "Lyft",
      "Microsoft",
      "Nutanix",
      "Oracle",
      "Paypal",
      "Qualtrics",
      "Salesforce",
      "Snapchat",
      "Splunk",
      "Tableau",
      "Visa",
      "VMware",
      "Walmart Labs",
      "Yahoo",
      "Yelp",
      "Zenefits",
    ],
    tags: ["Array", "Prefix Sum", "Blind75", "Grind75"],
  },
  {
    id: "L5",
    title: "Longest Palindromic Substring",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/longest-palindromic-substring",
    solutions: [
      {
        title: "Longest Palindromic Substring - Python - Leetcode 5",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=XYQecbcd6_c",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Alibaba",
      "Amazon",
      "Apple",
      "Baidu",
      "Bloomberg",
      "Cisco",
      "eBay",
      "Facebook",
      "GoDaddy",
      "Google",
      "Huawei",
      "caMorgan",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Pure Storage",
      "Roblox",
      "Samsung",
      "SAP",
      "ServiceNow",
      "Tencent",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Wayfair",
      "Yahoo",
      "Yandex",
    ],
    tags: ["String", "Dynamic Programming", "Blind75", "Grind75"],
  },
  {
    id: "L11",
    title: "Container With Most Water",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/container-with-most-water",
    solutions: [
      {
        title: "Container with Most Water - Leetcode 11 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=UuiTKBwPgAo",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Lyft",
      "Microsoft",
      "Oracle",
      "Uber",
      "VMware",
      "Walmart Labs",
      "Yahoo",
    ],
    tags: ["Array", "Two Pointers", "Greedy", "Blind75", "Grind75"],
  },
  {
    id: "L198",
    title: "House Robber",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/house-robber",
    solutions: [
      {
        title: "House Robber - Leetcode 198 - Python Dynamic Programming",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=73r3KWiEvyk",
      },
    ],
    companies: [
      "Adobe",
      "Airbnb",
      "Amazon",
      "Apple",
      "Bloomberg",
      "ByteDance",
      "Cisco",
      "Expedia",
      "Goldman Sachs",
      "Google",
      "HBO",
      "LinkedIn",
      "Microsoft",
      "Quora",
      "Uber",
      "Walmart Labs",
    ],
    tags: ["Array", "Dynamic Programming", "Blind75", "Grind75"],
  },
  {
    id: "L43",
    title: "Multiply Strings",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/multiply-strings",
    solutions: [
      {
        title: "Multiply Strings - Leetcode 43 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=1vZswirL8Y8",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Expedia",
      "Facebook",
      "Google",
      "Houzz",
      "Huawei",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Redfin",
      "Tencent",
      "Twitter",
      "Uber",
      "Walmart Labs",
      "Zillow",
    ],
    tags: ["Math", "String", "Simulation"],
  },
  {
    id: "L62",
    title: "Unique Paths",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/unique-paths",
    solutions: [
      {
        title: "Unique Paths - Dynamic Programming - Leetcode 62",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=IlEsdxuD4lY",
      },
    ],
    companies: [
      "Adobe",
      "Alibaba",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "Mathworks",
      "Microsoft",
      "Oracle",
      "Snapchat",
      "Uber",
      "VMware",
      "Walmart Labs",
    ],
    tags: [
      "Math",
      "Dynamic Programming",
      "Combinatorics",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L547",
    title: "Number of Provinces",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/number-of-provinces",
    solutions: [],
    companies: [
      "Amazon",
      "Atlassian",
      "Bloomberg",
      "Deutsche Bank",
      "Drawbridge",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Pocket Gems",
      "Twitter",
      "Two Sigma",
      "Uber",
    ],
    tags: ["Depth-First Search", "Breadth-First Search", "Union Find", "Graph"],
  },
  {
    id: "L153",
    title: "Find Minimum in Rotated Sorted Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array",
    solutions: [
      {
        title:
          "Find Minimum in Rotated Sorted Array - Binary Search - Leetcode 153 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=nIVW4P8b1VA",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Goldman Sachs",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Salesforce",
      "Uber",
      "VMware",
      "Walmart Labs",
    ],
    tags: ["Array", "Binary Search", "Blind75", "Grind75"],
  },
  {
    id: "L300",
    title: "Longest Increasing Subsequence",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/longest-increasing-subsequence",
    solutions: [
      {
        title:
          "Longest Increasing Subsequence - Dynamic Programming - Leetcode 300",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=cjWnW0hdF1Y",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Atlassian",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
      "Salesforce",
      "Uber",
      "Visa",
      "VMware",
    ],
    tags: [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L150",
    title: "Evaluate Reverse Polish Notation",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/evaluate-reverse-polish-notation",
    solutions: [
      {
        title: "Evaluate Reverse Polish Notation - Leetcode 150 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=iu0082c4HDE",
      },
    ],
    companies: [
      "Amazon",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Opendoor",
      "Pure Storage",
      "Uber",
      "Zillow",
    ],
    tags: ["Array", "Math", "Stack", "Grind75"],
  },
  {
    id: "L18",
    title: "4Sum",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/4sum",
    solutions: [
      {
        title: "4Sum - Leetcode 18 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=EYeR-_1NRlQ",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Yahoo",
    ],
    tags: ["Array", "Two Pointers", "Sorting"],
  },
  {
    id: "L47",
    title: "Permutations II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/permutations-ii",
    solutions: [
      {
        title: "Permutations II - Backtracking - Leetcode 47",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=qhBVWf0YafA",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Bloomberg",
      "Facebook",
      "LinkedIn",
      "Microsoft",
      "Uber",
      "VMware",
    ],
    tags: ["Array", "Backtracking"],
  },
  {
    id: "L148",
    title: "Sort List",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/sort-list",
    solutions: [
      {
        title: "Sort List - Merge Sort - Leetcode 148",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=TGveA1oFhrc",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Baidu",
      "Facebook",
      "Google",
      "Microsoft",
      "VMware",
    ],
    tags: [
      "Linked List",
      "Two Pointers",
      "Divide and Conquer",
      "Sorting",
      "Merge Sort",
      "Grind75",
    ],
  },
  {
    id: "L442",
    title: "Find All Duplicates in an Array",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/find-all-duplicates-in-an-array",
    solutions: [
      {
        title: "Find All Duplicates in an Array - Leetcode 442 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=Y8x0iAVEITo",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Facebook",
      "Google",
      "Lyft",
      "Microsoft",
      "Pocket Gems",
    ],
    tags: ["Array", "Hash Table"],
  },
  {
    id: "L142",
    title: "Linked List Cycle II",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/linked-list-cycle-ii",
    solutions: [],
    companies: [
      "Adobe",
      "Amazon",
      "Apple",
      "eBay",
      "Google",
      "LinkedIn",
      "Microsoft",
    ],
    tags: ["Hash Table", "Linked List", "Two Pointers"],
  },
  {
    id: "L323",
    title: "Number of Connected Components in an Undirected Graph",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",
    solutions: [
      {
        title:
          "Number of Connected Components in an Undirected Graph - Union Find - Leetcode 323 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=8f1XPm4WOUc",
      },
    ],
    companies: [
      "Amazon",
      "Facebook",
      "Google",
      "LinkedIn",
      "Microsoft",
      "Twitter",
    ],
    tags: [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L417",
    title: "Pacific Atlantic Water Flow",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/pacific-atlantic-water-flow",
    solutions: [
      {
        title: "Pacific Atlantic Water Flow - Leetcode 417 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=s-VkcjHqkGI",
      },
    ],
    companies: [
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
      "Oracle",
    ],
    tags: [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L435",
    title: "Non-overlapping Intervals",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/non-overlapping-intervals",
    solutions: [
      {
        title: "Non-Overlapping Intervals - Leetcode 435 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=nONCGxWoUfM",
      },
    ],
    companies: [
      "Amazon",
      "Apple",
      "Bloomberg",
      "Facebook",
      "Google",
      "Microsoft",
    ],
    tags: [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting",
      "Blind75",
      "Grind75",
    ],
  },
  {
    id: "L735",
    title: "Asteroid Collision",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/asteroid-collision",
    solutions: [
      {
        title: "Asteroid Collision - Stack - Leetcode 735",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=LN7KjRszjk4",
      },
    ],
    companies: ["Amazon", "eBay", "Lyft", "Uber", "Visa"],
    tags: ["Array", "Stack", "Simulation", "Grind75"],
  },
  {
    id: "L371",
    title: "Sum of Two Integers",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/sum-of-two-integers",
    solutions: [
      {
        title: "Sum of Two Integers - Leetcode 371 - Java",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=gVUrDV4tZfY",
      },
    ],
    companies: ["Adobe", "Amazon", "Facebook", "Hulu"],
    tags: ["Math", "Bit Manipulation", "Blind75"],
  },
  {
    id: "L881",
    title: "Loud and Rich",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/loud-and-rich",
    solutions: [
      {
        title: "Boats to Save People - Leetcode 881 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=XbaxWuHIWUs",
      },
    ],
    companies: ["Amazon", "FactSet", "Google"],
    tags: ["Array", "Depth-First Search", "Graph", "Topological Sort"],
  },
  {
    id: "L1036",
    title: "Rotting Oranges",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/rotting-oranges",
    solutions: [],
    companies: ["Google", "Uipath"],
    tags: ["Array", "Breadth-First Search", "Matrix", "Grind75"],
  },
  {
    id: "L971",
    title: "Shortest Bridge",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/shortest-bridge",
    solutions: [],
    companies: ["Bloomberg"],
    tags: ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"],
  },
  {
    id: "L2017",
    title: "Minimum Number of Flips to Make the Binary String Alternating",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",
    solutions: [],
    companies: [],
    tags: ["String", "Dynamic Programming", "Greedy", "Sliding Window"],
  },
  {
    id: "L1125",
    title: "Design File System",
    difficulty: Difficulty.MEDIUM,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/design-file-system",
    solutions: [],
    companies: [],
    tags: ["Hash Table", "String", "Design", "Trie"],
  },
  {
    id: "L84",
    title: "Largest Rectangle in Histogram",
    difficulty: Difficulty.HARD,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/largest-rectangle-in-histogram",
    solutions: [
      {
        title: "LARGEST RECTANGLE IN HISTOGRAM - Leetcode 84 - Python",
        site: sites.yt,
        url: "https://www.youtube.com/watch?v=zx5Sw9130L0",
      },
    ],
    companies: [
      "Adobe",
      "Amazon",
      "Bloomberg",
      "Facebook",
      "Flipkart",
      "Google",
      "Microsoft",
      "Twitter",
      "Walmart Labs",
    ],
    tags: ["Array", "Stack", "Monotonic Stack", "Grind75"],
  },
  {
    id: "L588",
    title: "Design In-Memory File System",
    difficulty: Difficulty.HARD,
    patterns: [patterns.ChallengeYourself],
    url: "https://leetcode.com/problems/design-in-memory-file-system",
    solutions: [],
    companies: ["Airbnb", "Amazon", "Baidu"],
    tags: ["Hash Table", "String", "Design", "Trie", "Grind75"],
  },
];
